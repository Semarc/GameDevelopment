//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/PlayerController/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Map"",
            ""id"": ""dee11f42-04da-4317-8e92-cbd6230b87e7"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""c93a7b8d-1c4d-4414-813d-1d51976564df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse X"",
                    ""type"": ""Value"",
                    ""id"": ""12052fe0-b0ff-41f4-a4fe-83ea0cc91cf8"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse Y"",
                    ""type"": ""Value"",
                    ""id"": ""811dc399-1f75-4a3a-8435-5e7b29fbba0f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""7a5ea886-241c-4a09-ba32-ff97aa730da9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""70ebd141-b04a-415c-9733-ece3aa43350e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GodMode"",
                    ""type"": ""Button"",
                    ""id"": ""00b8cb3d-3006-4459-a6a4-8a144a3b7651"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Flashlight"",
                    ""type"": ""Button"",
                    ""id"": ""841bbc1e-fad3-4563-a515-f00cba69df8e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReturnMainMenu"",
                    ""type"": ""Button"",
                    ""id"": ""b893d59c-b897-4e38-be6d-b9e2238a8f5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DayTime"",
                    ""type"": ""Button"",
                    ""id"": ""e0c2c443-33bb-4bf6-ad03-0316acf4b98f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NightTime"",
                    ""type"": ""Button"",
                    ""id"": ""9f40bd20-e9cd-4cf0-ba4b-bcf76c4b1e78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThrowBall"",
                    ""type"": ""Button"",
                    ""id"": ""eef765d8-514e-4081-b8a7-dc21dba55931"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnBox"",
                    ""type"": ""Button"",
                    ""id"": ""e6887a1c-82e8-4bfe-8ad3-534af20aa9a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChooseBox"",
                    ""type"": ""Value"",
                    ""id"": ""c7119cd0-463b-4a61-9dfc-f421e562cb30"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1a78f3db-e52c-4d0e-a063-0e4f2946cbaf"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c85a45db-4f13-4003-bdb3-9a56be702f1c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""69da53a6-7801-4657-9c25-99cd61fe21e5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ac9513c9-79cf-420a-9993-d37c64243dc7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3cab95bb-8b40-44eb-aac2-1c00a77a5ec8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""354ba2c0-7422-479c-87f5-2d06a57cb88e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e9b28beb-ec83-4542-a095-8d530e5cc508"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23e2bffa-0378-4843-8d00-ab36f79fe4da"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0b94a87-0c4f-40a4-9d03-5daa757f1fd3"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52c967b4-7c1a-45d2-920a-f59d8ebdcc71"",
                    ""path"": ""<Keyboard>/pageUp"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GodMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee304a8b-0394-4a01-9133-7b2ad8b7333c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flashlight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb195eb9-d5ea-4fd8-bd8d-128dabf8ee1c"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReturnMainMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5be7883c-bb9d-4292-b294-910b5667c245"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DayTime"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""668880ad-4881-4758-8648-dc613f7fa506"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NightTime"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b6f2a1f-e509-47cb-8eaf-e09fe4b6e8cd"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrowBall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81c50c6a-ce4e-4be9-a533-4ffc25ce9e2b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnBox"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35386dc7-1a52-4119-adb6-4e338fa5a124"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""ChooseBox"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d8a64cd-a1d9-432d-b015-c76500f463af"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""ChooseBox"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69b40219-9937-47bd-b125-96092e7e505c"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""ChooseBox"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afeb42d8-dd46-4e58-af46-f7498344f424"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""ChooseBox"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a2b0ab1-4f8d-4b5d-a6c3-8ff505f7f961"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=5)"",
                    ""groups"": """",
                    ""action"": ""ChooseBox"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Map
        m_Map = asset.FindActionMap("Map", throwIfNotFound: true);
        m_Map_Jump = m_Map.FindAction("Jump", throwIfNotFound: true);
        m_Map_MouseX = m_Map.FindAction("Mouse X", throwIfNotFound: true);
        m_Map_MouseY = m_Map.FindAction("Mouse Y", throwIfNotFound: true);
        m_Map_Movement = m_Map.FindAction("Movement", throwIfNotFound: true);
        m_Map_Run = m_Map.FindAction("Run", throwIfNotFound: true);
        m_Map_GodMode = m_Map.FindAction("GodMode", throwIfNotFound: true);
        m_Map_Flashlight = m_Map.FindAction("Flashlight", throwIfNotFound: true);
        m_Map_ReturnMainMenu = m_Map.FindAction("ReturnMainMenu", throwIfNotFound: true);
        m_Map_DayTime = m_Map.FindAction("DayTime", throwIfNotFound: true);
        m_Map_NightTime = m_Map.FindAction("NightTime", throwIfNotFound: true);
        m_Map_ThrowBall = m_Map.FindAction("ThrowBall", throwIfNotFound: true);
        m_Map_SpawnBox = m_Map.FindAction("SpawnBox", throwIfNotFound: true);
        m_Map_ChooseBox = m_Map.FindAction("ChooseBox", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Map
    private readonly InputActionMap m_Map;
    private List<IMapActions> m_MapActionsCallbackInterfaces = new List<IMapActions>();
    private readonly InputAction m_Map_Jump;
    private readonly InputAction m_Map_MouseX;
    private readonly InputAction m_Map_MouseY;
    private readonly InputAction m_Map_Movement;
    private readonly InputAction m_Map_Run;
    private readonly InputAction m_Map_GodMode;
    private readonly InputAction m_Map_Flashlight;
    private readonly InputAction m_Map_ReturnMainMenu;
    private readonly InputAction m_Map_DayTime;
    private readonly InputAction m_Map_NightTime;
    private readonly InputAction m_Map_ThrowBall;
    private readonly InputAction m_Map_SpawnBox;
    private readonly InputAction m_Map_ChooseBox;
    public struct MapActions
    {
        private @Controls m_Wrapper;
        public MapActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Map_Jump;
        public InputAction @MouseX => m_Wrapper.m_Map_MouseX;
        public InputAction @MouseY => m_Wrapper.m_Map_MouseY;
        public InputAction @Movement => m_Wrapper.m_Map_Movement;
        public InputAction @Run => m_Wrapper.m_Map_Run;
        public InputAction @GodMode => m_Wrapper.m_Map_GodMode;
        public InputAction @Flashlight => m_Wrapper.m_Map_Flashlight;
        public InputAction @ReturnMainMenu => m_Wrapper.m_Map_ReturnMainMenu;
        public InputAction @DayTime => m_Wrapper.m_Map_DayTime;
        public InputAction @NightTime => m_Wrapper.m_Map_NightTime;
        public InputAction @ThrowBall => m_Wrapper.m_Map_ThrowBall;
        public InputAction @SpawnBox => m_Wrapper.m_Map_SpawnBox;
        public InputAction @ChooseBox => m_Wrapper.m_Map_ChooseBox;
        public InputActionMap Get() { return m_Wrapper.m_Map; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MapActions set) { return set.Get(); }
        public void AddCallbacks(IMapActions instance)
        {
            if (instance == null || m_Wrapper.m_MapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MapActionsCallbackInterfaces.Add(instance);
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @MouseX.started += instance.OnMouseX;
            @MouseX.performed += instance.OnMouseX;
            @MouseX.canceled += instance.OnMouseX;
            @MouseY.started += instance.OnMouseY;
            @MouseY.performed += instance.OnMouseY;
            @MouseY.canceled += instance.OnMouseY;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @GodMode.started += instance.OnGodMode;
            @GodMode.performed += instance.OnGodMode;
            @GodMode.canceled += instance.OnGodMode;
            @Flashlight.started += instance.OnFlashlight;
            @Flashlight.performed += instance.OnFlashlight;
            @Flashlight.canceled += instance.OnFlashlight;
            @ReturnMainMenu.started += instance.OnReturnMainMenu;
            @ReturnMainMenu.performed += instance.OnReturnMainMenu;
            @ReturnMainMenu.canceled += instance.OnReturnMainMenu;
            @DayTime.started += instance.OnDayTime;
            @DayTime.performed += instance.OnDayTime;
            @DayTime.canceled += instance.OnDayTime;
            @NightTime.started += instance.OnNightTime;
            @NightTime.performed += instance.OnNightTime;
            @NightTime.canceled += instance.OnNightTime;
            @ThrowBall.started += instance.OnThrowBall;
            @ThrowBall.performed += instance.OnThrowBall;
            @ThrowBall.canceled += instance.OnThrowBall;
            @SpawnBox.started += instance.OnSpawnBox;
            @SpawnBox.performed += instance.OnSpawnBox;
            @SpawnBox.canceled += instance.OnSpawnBox;
            @ChooseBox.started += instance.OnChooseBox;
            @ChooseBox.performed += instance.OnChooseBox;
            @ChooseBox.canceled += instance.OnChooseBox;
        }

        private void UnregisterCallbacks(IMapActions instance)
        {
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @MouseX.started -= instance.OnMouseX;
            @MouseX.performed -= instance.OnMouseX;
            @MouseX.canceled -= instance.OnMouseX;
            @MouseY.started -= instance.OnMouseY;
            @MouseY.performed -= instance.OnMouseY;
            @MouseY.canceled -= instance.OnMouseY;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @GodMode.started -= instance.OnGodMode;
            @GodMode.performed -= instance.OnGodMode;
            @GodMode.canceled -= instance.OnGodMode;
            @Flashlight.started -= instance.OnFlashlight;
            @Flashlight.performed -= instance.OnFlashlight;
            @Flashlight.canceled -= instance.OnFlashlight;
            @ReturnMainMenu.started -= instance.OnReturnMainMenu;
            @ReturnMainMenu.performed -= instance.OnReturnMainMenu;
            @ReturnMainMenu.canceled -= instance.OnReturnMainMenu;
            @DayTime.started -= instance.OnDayTime;
            @DayTime.performed -= instance.OnDayTime;
            @DayTime.canceled -= instance.OnDayTime;
            @NightTime.started -= instance.OnNightTime;
            @NightTime.performed -= instance.OnNightTime;
            @NightTime.canceled -= instance.OnNightTime;
            @ThrowBall.started -= instance.OnThrowBall;
            @ThrowBall.performed -= instance.OnThrowBall;
            @ThrowBall.canceled -= instance.OnThrowBall;
            @SpawnBox.started -= instance.OnSpawnBox;
            @SpawnBox.performed -= instance.OnSpawnBox;
            @SpawnBox.canceled -= instance.OnSpawnBox;
            @ChooseBox.started -= instance.OnChooseBox;
            @ChooseBox.performed -= instance.OnChooseBox;
            @ChooseBox.canceled -= instance.OnChooseBox;
        }

        public void RemoveCallbacks(IMapActions instance)
        {
            if (m_Wrapper.m_MapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMapActions instance)
        {
            foreach (var item in m_Wrapper.m_MapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MapActions @Map => new MapActions(this);
    public interface IMapActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMouseX(InputAction.CallbackContext context);
        void OnMouseY(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnGodMode(InputAction.CallbackContext context);
        void OnFlashlight(InputAction.CallbackContext context);
        void OnReturnMainMenu(InputAction.CallbackContext context);
        void OnDayTime(InputAction.CallbackContext context);
        void OnNightTime(InputAction.CallbackContext context);
        void OnThrowBall(InputAction.CallbackContext context);
        void OnSpawnBox(InputAction.CallbackContext context);
        void OnChooseBox(InputAction.CallbackContext context);
    }
}
